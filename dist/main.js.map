{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/Map.js","webpack:///./src/scripts/Util.js","webpack:///./src/scripts/Player.js","webpack:///./src/scripts/Input.js","webpack:///./src/scripts/Tree.js","webpack:///./src/scripts/Basket.js","webpack:///./src/scripts/Decoration.js","webpack:///./src/scripts/Game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Map","width","height","this","map","Image","src","posX","posY","ctx","drawImage","offsetX","offsetY","willCollide","player","trees","newPlayer","left","speedX","right","up","speedY","down","collision","treeCollision","forEach","tree","objCollision","randomObjectPosition","playerStartPos","mapSize","waterOffset","min","max","Math","floor","random","Player","direction","walkingAnimation","treeTouching","spriteWidth","spriteHeight","spriteAnimation","clearRect","mapWidth","mapHeight","directions","basket","hasFruit","addItem","fruit","Input","game","document","addEventListener","e","keyCode","pickFruit","startGame","playMusic","newGame","hasItem","goalFruit","won","Tree","collisionX","collisionY","whichTree","playerOffsetX","playerOffsetY","plainTree","length","Basket","items","canvWidth","canvHeight","fillStyle","font","fillText","image","push","includes","Decoration","decoration","whichDecoration","sources","GAMESTATUS","FRUITS","Game","canvasWidth","canvasHeight","mapWaterOffset","gameStatus","total_trees","decorations","createMapObjects","emptyBasket","getElementById","style","visibility","randFruit","randFruitImg","start_screen","end_screen","drawMap","drawDecorations","drawTrees","drawBasket","drawPlayer","canvas","updateMap","movePlayer","randX","randY","constructTree","drawTree","fruitTree","constructDecoration","drawDecoration","treeArr","decorationArr","dec","getContext","gameBGM","startBGM","muted","soundIcon","pause","currentTime","play","mousePos","window","requestAnimationFrame","animate","imageSmoothingEnabled","updateGame","drawGame"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class Map {\n    constructor(width, height) {\n        this.map = new Image();\n        this.map.src = 'src/assets/images/map/map_background2.jpg';\n        this.posX = 0;\n        this.posY = 0;\n        this.width = width;\n        this.height = height\n    }\n\n    drawMap(ctx) {\n        ctx.drawImage(this.map, 0, 0, this.map.width, this.map.height, this.posX, this.posY, this.width, this.height)\n    }\n\n    updateMap(offsetX, offsetY){\n        this.posX = offsetX;\n        this.posY = offsetY\n    }\n\n}\n\nexport default Map;","export function objCollision(player, tree) {\n    return (player.posX <= tree.posX &&\n        tree.posX - tree.width <= player.posX + player.width &&\n        player.posY <= tree.posY &&\n        tree.posY - tree.height <= player.posY + player.height\n    )\n}\n\nexport function willCollide(player, trees){\n    let newPlayer = {\n        posX: player.posX,\n        posY: player.posY,\n        width: player.width,\n        height: player.height\n    }\n\n    if (player.left) {\n        newPlayer.posX -= player.speedX\n    }\n    if (player.right) {\n        newPlayer.posX += player.speedX\n    }\n    if (player.up) {\n        newPlayer.posY -= player.speedY\n    }\n    if (player.down) {\n        newPlayer.posY += player.speedY\n    }\n\n    let collision = false;\n    let treeCollision = null;\n    trees.forEach((tree)=>{\n        if (objCollision(newPlayer, tree))  {\n            collision = true;\n            treeCollision = tree;\n            return;\n        }       \n    })\n\n    return {collision, treeCollision}\n}\n\n\nexport function randomObjectPosition(playerStartPos, mapSize, waterOffset) {\n    let min = playerStartPos + 200;\n    let max = mapSize - waterOffset;\n\n    return Math.floor((Math.random() * (max-min)) + min)\n}","import {objCollision, willCollide} from './Util'\n\n\nclass Player {\n    constructor(posX, posY) {\n        this.player = new Image();\n        this.player.src = 'src/assets/images/sprite_player.png'\n        this.posX = posX;\n        this.posY = posY;\n        this.width = 100;\n        this.height = 100;\n        this.speedX = 5;\n        this.speedY = 5\n        this.direction = 0;\n        this.walkingAnimation = 0;\n        this.treeTouching = {}\n        this.left = false;\n        this.right = false;\n        this.up = false;\n        this.down = false;\n    }\n\n    drawPlayer(ctx, width, height){\n        let spriteWidth = this.player.width / 4\n        let spriteHeight = this.player.height / 4\n        let spriteAnimation = Math.floor(this.walkingAnimation % 4)\n\n        ctx.drawImage(this.player, spriteAnimation * spriteWidth, this.direction*spriteHeight, spriteWidth, spriteHeight, width, height, this.width, this.height)\n    }\n\n    clearPlayer(ctx) {\n        ctx.clearRect(this.posX, this.posY, this.width, this.height)\n    }\n\n    movePlayer(mapWidth, mapHeight, waterOffset, trees) {\n        let directions = {\n            \"down\": 0,\n            \"up\": 1,\n            \"left\": 2,\n            \"right\": 3\n        }\n        \n        if (this.left && this.posX > waterOffset+100) {\n            let {collision, treeCollision} = willCollide(this, trees)\n            if (!collision) {\n                this.posX -= this.speedX\n                this.treeTouching = {}\n            } else {\n                this.treeTouching = treeCollision\n            }\n            this.direction = directions[\"left\"]\n            this.walkingAnimation += 0.1;\n        }\n        if (this.right && this.posX < mapWidth - this.width - waterOffset) {\n            let { collision, treeCollision } = willCollide(this, trees)\n            if (!collision) {\n                this.posX += this.speedX\n                this.treeTouching = {}\n            } else {\n                this.treeTouching = treeCollision\n            }\n            this.direction = directions[\"right\"]\n            this.walkingAnimation += 0.1;\n        }\n        if (this.up && this.posY > waterOffset) {\n            let { collision, treeCollision } = willCollide(this, trees)\n            if (!collision) {\n                this.posY -= this.speedY\n                this.treeTouching = {}\n            } else {\n                this.treeTouching = treeCollision\n            }\n            this.direction = directions[\"up\"]\n            this.walkingAnimation += 0.1;\n        }\n        if (this.down && this.posY < mapHeight - this.height - waterOffset) {\n            let { collision, treeCollision } = willCollide(this, trees)\n            if (!collision) {\n                this.posY += this.speedY\n                this.treeTouching = {}\n            } else {\n                this.treeTouching = treeCollision\n            }\n            this.direction = directions[\"down\"]\n            this.walkingAnimation += 0.1;\n        }\n    }\n\n    pickFruit(basket) {\n        if (this.treeTouching.hasFruit) {\n            basket.addItem(this.treeTouching.fruit)\n        }\n    }\n}\n\n\nexport default Player;","import {playMusic, newGame} from '../index'\n\nclass Input {\n    constructor(player, basket, game) {\n        document.addEventListener('keydown', e => {\n            switch (e.keyCode) {\n                case 37:\n                    player.left = true\n                    break\n                case 39:\n                    player.right = true\n                    break\n                case 38:\n                    player.up = true\n                    break\n                case 40:\n                    player.down = true\n                    break\n                case 32:\n                    player.pickFruit(basket)\n                    break\n                case 13:\n                    game.startGame();\n                    playMusic();\n                    break\n                case 27:\n                    // debugger\n                    newGame();\n                    break\n            }\n            // console.log(e.keyCode)\n        });\n\n        document.addEventListener('keyup', e => {\n            switch (e.keyCode) {\n                case 37:\n                    player.left = false\n                    break\n                case 39:\n                    player.right = false\n                    break\n                case 38:\n                    player.up = false\n                    break\n                case 40:\n                    player.down = false\n                    break\n                case 32:\n                    if (basket.hasItem(game.goalFruit.name)) {\n                        game.won()\n                        playMusic()\n                    }\n                    break\n            }\n        })\n    }\n}\n\nexport default Input;","\nclass Tree {\n    constructor(posX, posY, hasFruit, fruit) {\n        this.posX = posX;\n        this.posY = posY;\n        this.width = 170;\n        this.height = 236;\n        this.collisionX = this.posX - this.width\n        this.collisionY = this.posY - this.height\n        this.hasFruit = hasFruit;\n        this.fruit = fruit\n        this.tree = new Image();\n        this.tree.src = this.whichTree();\n    }\n\n    drawTree(ctx, offsetX, offsetY) {\n        let playerOffsetX = this.posX + offsetX - this.width;\n        let playerOffsetY = this.posY + offsetY - this.height;\n\n        ctx.drawImage(this.tree, 0, 0, this.tree.width, this.tree.height, playerOffsetX, playerOffsetY, this.width, this.height)\n    }\n\n    // updateTrees(treeArr, ctx, offsetX, offsetY) {\n    //     treeArr.forEach((tree) => {\n    //         this.posX += (offsetX - this.width);\n    //         this.posY += (offsetY - this.height)\n\n    //         tree.drawTree(ctx)\n    //     })\n    // }\n\n    whichTree(){\n        const plainTree = [\n            'src/assets/images/trees/Tree-2-2.png',\n            'src/assets/images/trees/Tree-2-3.png',\n            'src/assets/images/trees/Tree-2-4.png'\n        ]\n        const fruitTree = {\n            \"apple\": 'src/assets/images/fruit_trees/apple-tree.png',\n            \"orange\": 'src/assets/images/fruit_trees/orange-tree.png',\n            \"peach\": 'src/assets/images/fruit_trees/peach-tree.png'\n        }\n\n        if (this.hasFruit) {\n            return fruitTree[this.fruit]\n        } else {\n            return plainTree[Math.floor(Math.random()*plainTree.length)]\n        }\n    }   \n}\n\nexport default Tree;","\nclass Basket  {\n    constructor() {\n        this.basket = new Image();\n        this.basket.src = 'src/assets/images/basket/basket.png'\n        this.width = 120;\n        this.height = 130;\n        this.items = []\n    }\n\n    drawBasket(ctx, canvWidth, canvHeight, goalFruit) {\n        ctx.drawImage(this.basket, 0, 0, this.basket.width, this.basket.height, canvWidth-120, canvHeight-720, this.width, this.height)\n        ctx.fillStyle = \"white\";\n        ctx.font = \"bold 24px Sans-Serif\"\n        ctx.fillText(`Collect:`, canvWidth-105, canvHeight-580)\n        ctx.drawImage(goalFruit.image, 0, 0, goalFruit.image.width, goalFruit.image.height, canvWidth - 110, canvHeight-570, 100, 100)\n    }\n\n    addItem(fruit) {\n        this.items.push(fruit)\n    }\n\n    hasItem(fruit){\n        return this.items.includes(fruit)\n    }\n\n    emptyBasket(){\n        this.items = [];\n    }\n}\n\nexport default Basket;","class Decoration {\n    constructor(posX, posY) {\n        this.decoration = new Image();\n        this.decoration.src = this.whichDecoration();\n        this.posX = posX;\n        this.posY = posY;\n        // this.width = 100;\n        // this.height = 100;\n        // this.setDimensions();\n    }\n    \n    drawDecoration(ctx, offsetX, offsetY) {\n        let playerOffsetX = this.posX + offsetX - this.width;\n        let playerOffsetY = this.posY + offsetY - this.height;\n        this.width ||= this.decoration.width*2;\n        this.height ||= this.decoration.height*2;\n        \n        ctx.drawImage(this.decoration, 0, 0, this.decoration.width, this.decoration.height, playerOffsetX, playerOffsetY, this.width, this.height)\n    }\n\n    whichDecoration(){\n        const sources = [\n            'src/assets/images/decorations/Bush-2.png',\n            'src/assets/images/decorations/Bush-4.png',\n            'src/assets/images/decorations/Flower-1.png',\n            'src/assets/images/decorations/Flower-2.png',\n            'src/assets/images/decorations/Flower-3.png',\n            'src/assets/images/decorations/Grass-1.png',\n            'src/assets/images/decorations/Grass-2.png',\n            'src/assets/images/decorations/Stone-1.png',\n            'src/assets/images/decorations/Stone-2.png',\n            'src/assets/images/decorations/Stump.png',\n        ]\n\n        return sources[Math.floor(Math.random() * sources.length)]\n    }\n\n    // setDimensions(){\n    //     this.width = this.decoration.width * 2;\n    //     this.height = this.decoration.height * 2;\n    // }\n}\n\nexport default Decoration","import Map from './Map';\nimport Player from './Player';\nimport Input from './Input';\nimport Tree from './Tree';\nimport Basket from './Basket';\nimport Decoration from './Decoration';\nimport { randomObjectPosition } from './Util'\n\nconst GAMESTATUS = {\n    START_SCREEN: 0,\n    PLAYING: 1,\n    WON: 2\n}\n\nconst FRUITS = [\n    \"apple\",\n    \"orange\",\n    \"peach\"\n]\n\nclass Game {\n    constructor(canvasWidth, canvasHeight, mapWidth, mapHeight, mapWaterOffset, ctx) {\n        this.canvasWidth = canvasWidth;\n        this.canvasHeight = canvasHeight;\n        this.mapWidth = mapWidth;\n        this.mapHeight = mapHeight;\n        this.mapWaterOffset = mapWaterOffset;\n        this.gameStatus = GAMESTATUS.START_SCREEN;\n        this.map = new Map(this.mapWidth, this.mapHeight);\n        this.player = new Player(this.canvasWidth / 2, this.canvasHeight / 2);\n        this.basket = new Basket();\n        new Input(this.player, this.basket, this);\n        this.total_trees = [];\n        this.decorations = [];\n        this.createMapObjects(ctx);\n    }\n\n    startGame(ctx){\n        this.gameStatus = GAMESTATUS.PLAYING;\n        this.basket.emptyBasket();\n        document.getElementById('start-instructions').style.visibility = 'hidden';\n        let randFruit = FRUITS[Math.floor(Math.random() * FRUITS.length)]\n        let randFruitImg = new Image();\n        randFruitImg.src = `src/assets/images/fruits/${randFruit}.png`\n\n        this.goalFruit = {\n            name: randFruit,\n            image: randFruitImg\n        }\n    }\n\n    drawGame(ctx) {\n        if (this.gameStatus === GAMESTATUS.START_SCREEN) {\n            let start_screen = new Image()\n            start_screen.src = \"src/assets/images/blank_screen.png\"\n            ctx.drawImage(start_screen, 0, 0, start_screen.width, start_screen.height)\n            return\n        } else if (this.gameStatus === GAMESTATUS.WON) {\n            let end_screen = new Image()\n            end_screen.src = \"src/assets/images/blank_screen.png\"\n            ctx.drawImage(end_screen, 0, 0, end_screen.width, end_screen.height)\n            return\n        }\n\n        let playerOffsetX = this.canvasWidth / 2 - this.player.posX\n        let playerOffsetY = this.canvasHeight / 2 - this.player.posY\n\n        this.map.drawMap(ctx);\n        this.drawDecorations(this.decorations, playerOffsetX, playerOffsetY, ctx)\n        this.drawTrees(this.total_trees, playerOffsetX, playerOffsetY, ctx)\n        this.basket.drawBasket(ctx, this.canvasWidth, this.canvasHeight, this.goalFruit)\n        this.player.drawPlayer(ctx, this.canvasWidth/2, this.canvasHeight/2)\n\n        \n    }\n\n    updateGame() {\n        if (this.gameStatus === GAMESTATUS.START_SCREEN || this.gameStatus === GAMESTATUS.WON) return;\n\n        let playerOffsetX = canvas.width / 2 - this.player.posX\n        let playerOffsetY = canvas.height / 2 - this.player.posY\n\n        this.map.updateMap(playerOffsetX, playerOffsetY)\n        this.player.movePlayer(this.mapWidth, this.mapHeight, this.mapWaterOffset, this.total_trees)\n    }\n\n    won() {\n        this.gameStatus = GAMESTATUS.WON\n        document.getElementById('end-instructions').style.visibility = 'visible';\n    }\n\n    createMapObjects(ctx) {\n        //Plain Trees\n        for (let i = 0; i < 15; i++) {\n            let randX = randomObjectPosition(this.player.posX, this.mapWidth, this.mapWaterOffset)\n            let randY = randomObjectPosition(this.player.posY, this.mapHeight, this.mapWaterOffset)\n\n            let constructTree = new Tree(randX, randY, false, \"\");\n            this.total_trees.push(constructTree);\n            constructTree.drawTree(ctx)\n        }\n\n        //Fruit Trees\n        for (let i = 0; i < 3; i++) {\n            let randX = randomObjectPosition(this.player.posX, this.mapWidth, this.mapWaterOffset)\n            let randY = randomObjectPosition(this.player.posY, this.mapHeight, this.mapWaterOffset)\n\n            let fruitTree = new Tree(randX, randY, true, FRUITS[i])\n            this.total_trees.push(fruitTree);\n            fruitTree.drawTree(ctx)\n        }\n\n        //Decorations\n        for (let i = 0; i < 150; i++) {\n            let randX = randomObjectPosition(this.player.posX, this.mapWidth, this.mapWaterOffset)\n            let randY = randomObjectPosition(this.player.posY, this.mapHeight, this.mapWaterOffset)\n\n            let constructDecoration = new Decoration(randX, randY);\n            this.decorations.push(constructDecoration);\n            constructDecoration.drawDecoration(ctx)\n        }\n    }\n\n    drawTrees(treeArr, offsetX, offsetY, ctx) {\n        treeArr.forEach((tree) => {\n            tree.drawTree(ctx, offsetX, offsetY)\n        })\n    }\n    \n    drawDecorations(decorationArr, offsetX, offsetY, ctx) {\n        decorationArr.forEach((dec) => {\n            dec.drawDecoration(ctx, offsetX, offsetY)\n        })\n    }\n}\n\nexport default Game;","import './styles/index.scss';\nimport Game from './scripts/Game'\n\n////Canvas Dimensions\nlet canvas = document.getElementById('canvas');\nlet ctx = canvas.getContext(\"2d\");\ncanvas.width = 1000;\ncanvas.height = 700;\nlet mapWidth = 2000 * 2;\nlet mapHeight = 1500 * 2;\nlet mapWaterOffset = 400\n\n//Game Audio\nlet gameBGM = document.getElementById('game-bgm');\nlet startBGM = document.getElementById('start-bgm');\nlet muted = true;\nlet soundIcon = new Image();\nsoundIcon.src = 'src/assets/images/util/mute.png'\n\ncanvas.addEventListener('click', e => {\n    const mousePos = {\n        posX: e.offsetX,\n        posY: e.offsetY\n    }\n\n    if (mousePos.posX > 950 && mousePos.posX < 1000 &&\n        mousePos.posY > 650 && mousePos.posY < 700) {\n        muted = !muted\n        if (!muted) {\n            soundIcon.src = 'src/assets/images/util/sound.png'\n            playMusic()\n        } else {\n            soundIcon.src = 'src/assets/images/util/mute.png'\n            gameBGM.pause();\n            startBGM.pause();\n        }\n    }\n})\n\nexport function playMusic() {\n    if (game.gameStatus === 1 && !muted) {\n        startBGM.pause();\n        startBGM.currentTime = 0;\n        gameBGM.play();\n    } else if (!muted) {\n        gameBGM.pause();\n        gameBGM.currentTime = 0;\n        startBGM.play();\n    }\n}\n\nexport function newGame() {\n    game = new Game(canvas.width, canvas.height, mapWidth, mapHeight, mapWaterOffset, ctx);\n    document.getElementById('start-instructions').style.visibility = 'visible';\n    document.getElementById('end-instructions').style.visibility = 'hidden';\n    game.gameStatus = 0\n}\n\n//Gameplay\nlet game = new Game(canvas.width, canvas.height, mapWidth, mapHeight, mapWaterOffset, ctx);\n\nwindow.requestAnimationFrame(animate)\nfunction animate(){\n    ctx.imageSmoothingEnabled = false;\n    ctx.clearRect(0,0,canvas.width,canvas.height)\n    \n    \n    game.updateGame()\n    game.drawGame(ctx)\n\n    ctx.drawImage(soundIcon, 0, 0, soundIcon.width, soundIcon.height, canvas.width-40, canvas.height-40, 30, 30)\n\n    window.requestAnimationFrame(animate)\n}\n"],"sourceRoot":""}